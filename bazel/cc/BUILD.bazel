package(default_visibility = ["//visibility:public"])
load("//bazel/cc:toolchain_config.bzl", "cc_toolchain_config")

filegroup(name = "empty")

WARNINGS = [
    # Start with a relatively high level of warnings as a default.
    "-Wall",
    "-Werror",
    "-Wextra",
    "-Wpedantic",
    "-Wuninitialized",

    # Warnings that trigger on the protocol buffer compiler
    "-Wno-missing-field-initializers",
    "-Wno-sign-compare",
    "-Wno-unused-parameter",
    "-Wno-zero-length-array",

    # Abseil's `StrFormat` uses the `enable_if` extension when available to
    # ensure format strings are correct at compile-time.
    "-Wno-gcc-compat",
]

cc_toolchain(
    name = "linux_x86_64_toolchain",
    toolchain_identifier = "linux_x86_64-toolchain",
    toolchain_config = ":linux_x86_64_toolchain_config",
    all_files = ":empty",
    compiler_files = ":empty",
    dwp_files = ":empty",
    linker_files = ":empty",
    objcopy_files = ":empty",
    strip_files = ":empty",
    supports_param_files = 0,
)

cc_toolchain_config(
    name = "linux_x86_64_toolchain_config",
    os = "linux",
    compiler_path = "/usr/bin/clang++-16",
    warnings = WARNINGS,
)

toolchain(
    name = "toolchain_for_linux_x86_64",
    toolchain = ":linux_x86_64_toolchain",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
)
